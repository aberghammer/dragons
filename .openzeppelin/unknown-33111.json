{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x88694405123b7E54e59be5C952D3cba9B87D0521",
      "txHash": "0x9047cb6bfb7cb64d1e78eaceeb69c19c17a259b241d2584c4c7a95e84971a395",
      "kind": "uups"
    },
    {
      "address": "0xe64e33B400FFA01a4Ebc280e0fD35e48497b654e",
      "txHash": "0x618ba602943427dd92a0ebd6553670de2c205cd63ff4c26c285847182952efe8",
      "kind": "uups"
    },
    {
      "address": "0x5B2269b30eCb236404392D233cc1844446A190F9",
      "txHash": "0xbd4fa5bc80208037987615597415678131c3445897aeb9431a5eeaa0def6eceb",
      "kind": "uups"
    },
    {
      "address": "0x8199E7c07c19Cc534293e7375647f3eCF082046a",
      "txHash": "0x5c1e8fa91db07a9a1d8c217881cdc2242249e14d2fba562e8bbbd0883721ecbc",
      "kind": "uups"
    }
  ],
  "impls": {
    "69695b87a220e4620d72d423e929c4919c266b0e700f67bca5e7e560dc5fe33b": {
      "address": "0xA30D26ebb0367C658d17F5280095Dc3C97bb26eD",
      "txHash": "0xdb2d080daeeb36b250ec7a849a71e1ab4591845a73c50ce0e6b26beffac2a84f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3998",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)9173",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)9379_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)9398_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)9412_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)9405_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3998": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)9173": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)9379_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)9398_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)9405_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)9412_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)9398_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)9405_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)9412_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)9379_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "86a4d152ec03f346c40ebec6bfa9376f712f1eaa9ae26c917c7cd710722cb7e0": {
      "address": "0xFc686aBAC3cac4F0CBAdB6de626aB926Bc3eCF18",
      "txHash": "0x835f044a5c51342caadcd1e72969da557102bf94617d5103642dcc4cdb8547cb",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3998",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)9173",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)9379_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)9398_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)9412_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)9405_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3998": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)9173": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)9379_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)9398_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)9405_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)9412_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)9398_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)9405_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)9412_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)9379_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "51cfbb472e45981dd1080aad4f675234e7b0227c23eff77b3b33215a919b382a": {
      "address": "0xd89D02bdB5e55ECda0981E59a57340efd0Cd8702",
      "txHash": "0x418a9961b56d6a308a67eb28f543c2590034221fb18200705aa9b243d648884e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3041",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)7776",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)8015_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3041": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)7776": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)8015_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)8001_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)8008_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)8015_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)7982_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ca3bbb7cc55a6ef29bc2783debbd4c8f825dd03f4f24bbc4905e9e2782617af3": {
      "address": "0x501AE8858a9daCf7c4601Ef86e6bAbFD71a63944",
      "txHash": "0x8a93c9266c0ae24bb381c5b7a02dd4921ef4d54f93cdefd9f5805d22b28c483a",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3041",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)7776",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)8015_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3041": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)7776": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)8015_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)8001_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)8008_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)8015_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)7982_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
