{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x9EE83902c94ABfFe2406659593267e1a4458e91f",
      "txHash": "0xfdaaa56d62dccb4eb12485ee64d7ab0a65373234b3637955f24bd05d6d80d20a",
      "kind": "uups"
    },
    {
      "address": "0x71C222cf73054ebC93E699391b1B531ce7174dAA",
      "txHash": "0x010deb8c4253d13fadbeeee6280f23702e93d1494521d4615ff7ddde209b5a8e",
      "kind": "uups"
    },
    {
      "address": "0x83DE8bc1E43181c8f085db2b1bdBA32E52391f75",
      "txHash": "0xa6cc8a7d6f5e91126207fc1f0ef135146c1b5ad67d58f33c3a6a14ccc95dc285",
      "kind": "uups"
    },
    {
      "address": "0x72Bb1E1E5141087dDcB10cbf9F903F41b3189C67",
      "txHash": "0xbf75dd6f008e8c1fafd381913679bb5add5790ab57f9407b542dd90806cfd432",
      "kind": "uups"
    },
    {
      "address": "0x30f4539B4b65d27Ab9384cf45aAe5Cc03A883205",
      "txHash": "0x96c94e961b8c0ddda7c372f5a6b8e47d23e3e67b38a2efda0c61cb371ad6acaf",
      "kind": "uups"
    },
    {
      "address": "0x8fB8AaB584e5ac00b658f7e2e4717545b87b63a9",
      "txHash": "0xde0235e8678851fa17dc262f4b2aef7e38226a9bba2fd7ca7b32319d1f00616b",
      "kind": "uups"
    },
    {
      "address": "0x5AbAb22478B36020a417A0B8b71896d920089bcD",
      "txHash": "0xc10986a907b6c10e760296cc9df1127a3660f6e20c0fe05f2a1b2ea3e7ed1c7e",
      "kind": "uups"
    }
  ],
  "impls": {
    "69695b87a220e4620d72d423e929c4919c266b0e700f67bca5e7e560dc5fe33b": {
      "address": "0x6d16D1982CB25837CdB821787d51740d7a1e21Ad",
      "txHash": "0x8b7a83b6c7aabc248be9d2da8ef3339420b95f23adfd6a6542ac826ccd235865",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3998",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)9173",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)9379_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)9398_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)9412_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)9405_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3998": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)9173": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)9379_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)9398_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)9405_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)9412_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)9398_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)9405_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)9412_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)9379_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9e722585a5c7c94b63b4b3b862024a085ac1ea86c6413d0d1a938c277c1722e4": {
      "address": "0x84f150834E168b7Bad0CD99a340fbc94A818eCd0",
      "txHash": "0x18e934704159d5b940953c7286c4eb6f41c48ab2103fc83cafe44dafc88facfa",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3041",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)7776",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)8015_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3041": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)7776": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)8015_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)8001_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)8008_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)8015_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)7982_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "eb35f77ce2e4fafa5f71f4b43370d1e246b251414b376047c8c34894dcb5666f": {
      "address": "0x128Bc2B2F28C07c406d83637C02169C042649e4d",
      "txHash": "0x632a2c2052145133282d902d9c37238fd414193b3e05d2a118422207275010fb",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3998",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)9173",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)9379_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)9398_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)9412_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)9405_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3998": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)9173": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)9379_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)9398_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)9405_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)9412_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)9398_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)9405_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)9412_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)9379_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "dfe54a02a89c7ae1cc2ed6ba926e1920f4f0aeba2b142c4259a654a337e7ab17": {
      "address": "0xF38Cdc3aDBED328310AB03C7C110899240E51951",
      "txHash": "0x3cec776292fc961c125b333e5ae9a840dcebc240af6621ca219db1c24cebe79a",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3041",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)7776",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)8015_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3041": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)7776": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)8015_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)8001_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)8008_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)8015_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)7982_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6bd88825744267923699ffdf6183d2d8a4e236ec4b5d25929f46cefa4ec948ce": {
      "address": "0x86E0Cabd829a915fFe95573888Aac20699974F7B",
      "txHash": "0x7671d30415f6bd3b3e80c5424b57e7931e81b5b84fccbee8445df2b032ff8bc1",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3041",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)7776",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)8015_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3041": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)7776": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)8015_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)8001_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)8008_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)8015_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)7982_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b52ac2e09a3434a5520807cc94cead4bad1c12b064e0014f128d0f0dd0b93303": {
      "address": "0x3c105318E776ebEF035DddDD76C4e6bE8CaEfF4A",
      "txHash": "0x6b86cb9dca2274d9b81d1dbaa3c6209a8ec38642393092bdd059c467f2e3be7f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3041",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)7776",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)8015_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3041": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)7776": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)8015_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)8001_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)8008_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)8015_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)7982_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1b0d67947c8dad16fab2768fb22e875e6929dbb33ab74a433af5045324a9921f": {
      "address": "0x933000AA290E591703A35168A0812012e3dBb631",
      "txHash": "0x0f55aefeea68cc7bce24f03e7f527a0506529581376770317cb7399b3d143e16",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakingOpen",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:84"
          },
          {
            "label": "pointsPerHourPerToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:85"
          },
          {
            "label": "pointsPerDayPerToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:86"
          },
          {
            "label": "mintedDragonCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:87"
          },
          {
            "label": "stakingInProgress",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:88"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:89"
          },
          {
            "label": "dragons",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC721)3041",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:90"
          },
          {
            "label": "entropy",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IEntropy)7776",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:91"
          },
          {
            "label": "provider",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:92"
          },
          {
            "label": "stakedTokenIds",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:94"
          },
          {
            "label": "stakedTokenProps",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:95"
          },
          {
            "label": "hasStaked",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:97"
          },
          {
            "label": "tokenIndexInArray",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:98"
          },
          {
            "label": "owedRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:99"
          },
          {
            "label": "requestIdToMintId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:100"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:101"
          },
          {
            "label": "tokenURIs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:102"
          },
          {
            "label": "rollTypes",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint8,t_struct(RollType)8015_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:104"
          },
          {
            "label": "rarityLevels",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)",
            "contract": "DerpyDragons",
            "src": "contracts\\DerpyDragons.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)547_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)235_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)723_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)6_storage": {
            "label": "uint256[6]",
            "numberOfBytes": "192"
          },
          "t_contract(IERC721)3041": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IEntropy)7776": {
            "label": "contract IEntropy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedTokens)7982_storage)": {
            "label": "mapping(uint256 => struct DerpyDragons.StakedTokens)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(MintRequest)8001_storage)": {
            "label": "mapping(uint64 => struct DerpyDragons.MintRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RarityLevel)8008_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RarityLevel)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(RollType)8015_storage)": {
            "label": "mapping(uint8 => struct DerpyDragons.RollType)",
            "numberOfBytes": "32"
          },
          "t_struct(MintRequest)8001_storage": {
            "label": "struct DerpyDragons.MintRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "randomNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requestCompleted",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "mintFinalized",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RarityLevel)8008_storage": {
            "label": "struct DerpyDragons.RarityLevel",
            "members": [
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RollType)8015_storage": {
            "label": "struct DerpyDragons.RollType",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "probabilities",
                "type": "t_array(t_uint256)6_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(StakedTokens)7982_storage": {
            "label": "struct DerpyDragons.StakedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "checkInTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
